{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6dd1b7b1-262f-4eed-a35a-2d5fccaabc28",
   "metadata": {},
   "source": [
    "###Mod8 Project 1: CryVesto###"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "48f63281-a5ac-4639-a403-975460328c6b",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Imports for Analysis Program:\n",
    "from pathlib import Path\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import os \n",
    "import requests\n",
    "from dotenv import load_dotenv\n",
    "import hvplot.pandas \n",
    "\n",
    "from MCForecastTools import MCSimulation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0a4f7572-5c8c-400a-9f43-07dd39171bb5",
   "metadata": {},
   "source": [
#<<<<<<< Dane
    "Create a Python list named savings_data that has two elements. The first element contains the total value of the cryptocurrency wallet. The second element contains the total value of the stock and bond portions of the portfolio"
=======
    "Sample DataFrame and code for pie charts:\n",
    "\n",
    "Create a Python list named [savings_data] that has two elements. The first element contains the total value of the cryptocurrency wallet. The second element contains the total value of the stock and bond portions of the portfolio"
#>>>>>>> main
   ]
  },
  {
   "cell_type": "code",
#<<<<<<< Dane
   "execution_count": null,
=======
   "execution_count": 3,
#>>>>>>> main
   "id": "23ee0b67-2dad-4c7e-8529-f4e1584afe7a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Consolidate financial assets data into a Python list\n",
    "savings_data = (total_crypto_wallet, total_portfolio) \n",
    "\n",
    "# Review the Python list savings_data\n",
    "savings_data "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "893bda60-6875-43d4-9608-758b593c3be3",
   "metadata": {},
   "source": [
#<<<<<<< Dane
    "DataFrame and code for pie charts: \n",
=======
#>>>>>>> main
    "Use the [savings_data] list to create a Pandas DataFrame named [savings_df], and then display this DataFrame. The function to create the DataFrame should take the following 3 parameters: \n",
    "\n",
    "savings_data: Use the list that you just created.\n",
    "\n",
    "columns: Set this parameter equal to a Python list with a single value called amount.\n",
    "\n",
    "index: Set this parameter equal to a Python list with the values of crypto and stock/bond.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b9f4cab1-15cc-4971-9824-439fef137202",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Plot the total value of the member's portfolio (crypto and stock/bond) in a pie chart\n",
    "savings_df.plot.pie(y='amount', autopct=\"%.2f\", title='Portfolio Composition - 2022-04-23') \n",
    "# plt.style.use('dark_background') "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "095b24e5-4b1e-46da-a7eb-68fddc635455",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "51e4a0ad-0e6c-4404-b30f-535e36dba2d6",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "dev",
   "language": "python",
   "name": "dev"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
